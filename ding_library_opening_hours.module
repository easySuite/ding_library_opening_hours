<?php
/**
 * @file
 * Code for the Ding library opening hours related blocks.
 */

/**
 * Implements hook_menu().
 */
function ding_library_opening_hours_menu() {
  $menu = array();

  $menu['ding_library_hours_ajax/%/%'] = array(
    'title' => 'Ding library opening/today hours',
    'description' => 'Ajax representation of widget',
    'access arguments' => array('access content'),
    'page callback' => 'ding_library_opening_hours_ajax',
    'page arguments' => array(1, 2),
  );

  $menu['admin/config/system/ding_library_opening_hours'] = array(
    'title' => 'Library opening hours settings',
    'description' => 'Provides Ding library opening hours settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ding_library_opening_hours_form'),
    'access arguments' => array('administer opening hours configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $menu;
}

/**
 * Settings page form callback.
 *
 * @return mixed
 */
function ding_library_opening_hours_form() {
  $form = array();

  $form['dloh'] = array(
    '#type' => 'fieldset',
    '#title' => 'Ding library opening hours settings',
  );

  $form['dloh']['ding_library_opening_hours_notice_hide_icon'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show notice as text'),
    '#description' => t('Toggle display of notice in "Opened today" libraries block.'),
    '#default_value' => variable_get('ding_library_opening_hours_notice_hide_icon', ''),
  );

  return system_settings_form($form);
}

/**
 * Ajax handler.
 */
function ding_library_opening_hours_ajax($type, $id) {
  $theme = 'ding_library_' . $type . '_view';
  $commands = array();
  $commands[] = ajax_command_replace('#' . $id . ".ding_library_hours", theme($theme));

  return ajax_deliver(array('#type' => 'ajax', '#commands' => $commands));
}

/**
 * Implements hook_block_info().
 */
function ding_library_opening_hours_block_info() {
  return array(
    'ding_library_opening_hours' => array(
      'info' => t('Ding: Opening hours for this week'),
      'cache' => DRUPAL_NO_CACHE,
    ),
    'ding_library_opened_today' => array(
      'info' => t("Ding: Today's opening hours for all libraries"),
      'cache' => DRUPAL_NO_CACHE,
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function ding_library_opening_hours_block_view($delta = '') {
  $block = array();

  drupal_add_js(drupal_get_path('module', 'ding_library_opening_hours') . '/js/ding_library_opening_hours.js');

  if ($delta == 'ding_library_opening_hours' && $node = menu_get_object()) {
    drupal_add_css(drupal_get_path('module', 'ding_library_opening_hours') . '/css/ding_library_opening_hours.css', array('type' => 'file'));
    $block['subject'] = t('Opening hours');
    $block['content'] = array(
      '#theme' => 'ding_library_opening_hours_view',
      '#node' => $node,
    );
  }

  if ($delta == 'ding_library_opened_today') {
    drupal_add_css(drupal_get_path('module', 'ding_library_opening_hours') . '/css/ding_library_opening_hours.css', array('type' => 'file'));
    $block['subject'] = t('Opened today');
    $block['content'] = array(
      '#theme' => 'ding_library_opened_today_view',
    );
  }

  return $block;
}

/**
 * Implements hook_preprocess_theme().
 */
function ding_library_opening_hours_preprocess_opening_hours_week(&$vars) {
  $library = $vars['node'];
  $hide_from_overview = FALSE;

  if (isset($library->field_ding_library_overview_val[LANGUAGE_NONE][0]['value'])) {
    $hide_from_overview = $library->field_ding_library_overview_val[LANGUAGE_NONE][0]['value'];
  }

  $vars['ding_library_overview'] = $hide_from_overview;
}

/**
 * Implements hook_theme().
 */
function ding_library_opening_hours_theme($existing, $type, $theme, $path) {
  return array(
    'ding_library_opening_hours_view' => array(
      'path' => $path . '/templates',
      'template' => 'ding_library_opening_hours_view',
      'variables' => array('node' => NULL),
    ),
    'ding_library_opened_today_view' => array(
      'path' => $path . '/templates',
      'template' => 'ding_library_opened_today_view',
      'variables' => array('libraries' => NULL),
    ),
  );
}

/**
 * Preprocess variables for our template.
 */
function template_preprocess_ding_library_opening_hours_view(&$vars) {
  $node = $vars['node'];
  // Some minor date manipulations to get the correct range for the block
  $full_day            = 24 * 60 * 60;
  $current_date        = time();
  $current_day_of_week = date('w');
  $start_of_week       = $current_date - ($full_day * $current_day_of_week) + 1;
  $start_date          = date('Y-m-d', $start_of_week);

  // Generate dummy holder for the current week
  $days = array();
  for ($i = 0; $i < 7; $i++) {
    $start_of_week  += $full_day;
    $day_date        = date('Y-m-d', $start_of_week);
    $days[$day_date] = array(
      'day_name' => date('l', $start_of_week),
    );
  }

  $end_date = date('Y-m-d', $start_of_week);

  // Load the opening hours from DB for theming
  $opening_hours = opening_hours_instance_load_multiple($node->nid, $start_date, $end_date);
  foreach ($opening_hours as $instance) {
    if (isset($days[$instance->date]['day_name'])) {
      $days[$instance->date]['end_time'] = $instance->end_time;
      $days[$instance->date]['start_time'] = $instance->start_time;
    }
  }

  $vars['days'] = $days;
}

/**
 * Implements hook_theme_registry_alter().
 */
function ding_library_opening_hours_theme_registry_alter(&$theme_registry) {
  $theme_registry['ding_ddbasic_opening_hours_all']['preprocess functions'][] = 'ding_library_opening_hours_preprocess_ding_ddbasic_opening_hours_all';
}

/**
 * Implements hook_preprocess_HOOK().
 */
/**
 * Filter libraries based on the field_ding_library_main_val.
 *
 * @todo Remove this when All opening hours pane will be moved to
 * Ding: Today's opening hours for all libraries.
 */
function ding_library_opening_hours_preprocess_ding_ddbasic_opening_hours_all(&$variables) {
  if (!empty($variables['table']['#rows'])) {
    foreach ($variables['table']['#rows'] as $lid => $row) {
      $library = node_load($lid);
      if (!empty($library->field_ding_library_main_val[LANGUAGE_NONE][0]['value'])) {
        unset($variables['table']['#rows'][$lid]);
      }
    }
  }
}

/**
 * Preprocess variables for our template.
 */
function template_preprocess_ding_library_opened_today_view(&$vars) {
  $libraries = array();
  $today = date('Y-m-d');

  // Load all libraries form list, because there are less libraries than dates
  // and because of how opening_hours_instance_load_multiple works
  $sql = 'SELECT nq.qid, nq.show_in_tab, nq.show_in_links, nq.show_in_ui, nq.i18n ' .
    'FROM {nodequeue_queue} nq ' .
    'INNER JOIN {nodequeue_types} nt ON nt.qid = nq.qid ' .
    "WHERE nt.type = :type ";
  $result = db_query($sql, array(':type' => 'ding_library'));
  $qids = array();
  foreach ($result as $qid) {
    $qids[$qid->qid] = $qid;
  }
  $queue_id = array_keys($qids);
  $nodes = nodequeue_load_nodes($queue_id[0], FALSE, 0, 50);

  if (!empty($nodes)) {
    foreach ($nodes as $library) {
      $hide_from_main_widget = FALSE;
      if (isset($library->field_ding_library_main_val[LANGUAGE_NONE][0]['value'])) {
        $hide_from_main_widget = $library->field_ding_library_main_val[LANGUAGE_NONE][0]['value'];
      }

      if (!$hide_from_main_widget) {
        $libraries[$library->nid]['title'] = l(
          $library->title,
          'node/' . $library->nid,
          array('fragment' => 'toggle-opening-hours', 'external' => TRUE)
        );
      }
    }

    // Get all dates for today
    if (!empty($libraries) > 0) {
      $opening_hours = opening_hours_instance_load_multiple(array_keys($libraries), $today, $today);
      $i = 0;
      foreach ($opening_hours as $hour) {
        $libraries[$hour->nid]['opening_hours'][$i]['start_time'] = $hour->start_time;
        $libraries[$hour->nid]['opening_hours'][$i]['end_time'] = $hour->end_time;
        $libraries[$hour->nid]['opening_hours'][$i]['notice'] = $hour->notice;
        $i++;
      }

      // Check if we should display text instead of "info" icon for notice.
      $notice_format = variable_get('ding_library_opening_hours_notice_hide_icon', FALSE);
      $vars['notice_format'] = $notice_format;
    }
  }

  $vars['libraries'] = $libraries;
}

/**
 * Implements hook_views_pre_render().
 */
function ding_library_opening_hours_views_pre_render(&$view) {
  if ($view->name == 'ding_library' && $view->current_display == 'ding_library_libraries_list') {
    foreach ($view->result as $row => $item) {
      $node = node_load($item->nid);
      $field = field_get_items('node', $node, 'field_ding_library_overview_val');
      $ding_library_overview = $field[0]['value'];

      if (!empty($ding_library_overview)) {
        unset($view->result[$row]);
      }
    }
  }
}
